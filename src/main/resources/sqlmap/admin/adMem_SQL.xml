<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
namespace : xml 파일이 여러개일 수 있음
이를 구별하기 위한 식별 용도로 사용됨
 -->
<mapper namespace="kr.or.ddit.admin.mapper.AdMemMapper">
	<!-- 자주 사용되는 구문을 따로 관리 -->
	<sql id="where">
		<!-- 전체 검색 -->
	    <if test="keyword!=null and !keyword.equals('')">
    	AND    (
            MEM_ID   LIKE '%' || #{keyword} || '%' OR
            MEM_TEL   LIKE '%' || #{keyword} || '%' OR
            MEM_NM LIKE '%' || #{keyword} || '%'
        )
        </if>
        <if test="sort == 'bronze'">
        AND GRAD_ID = 'G01'
        </if>
        <if test="sort == 'silver'">
        AND GRAD_ID = 'G02'
        </if>
        <if test="sort == 'gold'">
        AND GRAD_ID = 'G03'
        </if>
        <if test="sort == 'dia'">
        AND GRAD_ID = 'G04'
        </if>
        <if test="sort == 'enable'">
        AND ENABLED = 1
        </if>
        <if test="sort == 'disable'">
        AND ENABLED = 0
        </if>
	</sql>
	
	<sql id="order">
	   <choose>
	      <when test="sort == 'memNm'">
	         ORDER BY MEM_NM
	      </when>
	      <when test="sort == 'joinDt'">
	         ORDER BY JOIN_DT DESC
	      </when>
	      <when test="sort == 'enabled'">
	         ORDER BY ENABLED DESC
	      </when>
	      <when test="sort == 'wrnCnt'">
	         ORDER BY WRN_CNT DESC
	      </when>
	      <when test="sort == 'wrnSt'">
	         ORDER BY WRN_ST DESC
	      </when>
	      <otherwise>
	         ORDER BY MEM_ID ASC
	      </otherwise>
	   </choose>
	</sql>

	
	<sql id="brdWhere">
		<!-- 전체 검색 -->
	    <if test="keyword!=null and !keyword.equals('')">
	    	AND    (
	            BRD_KND   LIKE '%' || #{keyword} || '%' OR
	            BRD_TT LIKE '%' || #{keyword} || '%' OR
	            BRD_CNTN  LIKE '%' || #{keyword} || '%' OR
	            FRST_WRTR  LIKE '%' || #{keyword} || '%' OR
	        )
        </if>
	</sql>

	<!-- 전체 회원 목록 -->
	<select id="memList" parameterType="hashMap" resultType="memVO">
		WITH T AS(
		    SELECT
		    	ROW_NUMBER() OVER(<include refid="order"></include>) RNUM,
			   A.MEM_ID, A.MEM_NM, A.MEM_ENM, A.MEM_FMNM, A.MEM_PW, A.MEM_BIR, A.MEM_GEN, 
			    A.MEM_TEL, A.MEM_EMAIL, A.MEM_ADDR1, A.MEM_ADDR2, A.MAIL_AGR, A.MEM_MLG, 
			    A.WRN_CNT, A.WRN_ST, A.MEM_MBTI, A.GRAD_ID, A.ENABLED, A.JOIN_DT, A.WHDWL_DT,
			    B.SAVE_PATH AS MEM_IMG
			FROM MEM A
			LEFT JOIN ATTACH_DE B ON A.MEM_ID = B.ATTACH_ID
		    WHERE  1 = 1
		    <include refid="where"></include>
		)
		SELECT T.*
		FROM   T
		WHERE  T.RNUM BETWEEN (#{currentPage} * #{size}) - (#{size} - 1) 
						  AND (#{currentPage} * #{size})
	</select>

	<!-- 회원 상세 -->
	<select id="memDetail" parameterType="memVO" resultType="memVO">
		SELECT
		    A.MEM_ID, A.MEM_NM, A.MEM_ENM, A.MEM_FMNM, A.MEM_PW, A.MEM_BIR, A.MEM_GEN, 
		    A.MEM_TEL, A.MEM_EMAIL, A.MEM_ADDR1, A.MEM_ADDR2, A.MAIL_AGR, A.MEM_MLG, 
		    A.WRN_CNT, A.WRN_ST, A.MEM_MBTI, A.GRAD_ID, A.ENABLED, A.JOIN_DT, A.WHDWL_DT,
		    B.SAVE_PATH AS MEM_IMG
		FROM MEM A
		LEFT JOIN ATTACH_DE B ON A.MEM_ID = B.ATTACH_ID
		WHERE MEM_ID = #{memId}
	</select>
	
	<!-- 회원 수 -->
	<select id="memTotal" parameterType="hashMap" resultType="int">
		SELECT COUNT(*) FROM MEM
		WHERE 1 = 1
		<include refid="where"></include>
	</select>
	
	<!-- 회원 작성 게시글 -->
	<select id="memBrdList" parameterType="memVO" resultType="brdVO">
		SELECT
			BRD_ID, BRD_KND, BRD_TT, BRD_CNTN, BRD_DEL, INTR, 
			INTR_RESN, BRD_LIKE, REPRT, TOUR_ID, REPRT_CK, 
			FRST_WRTR, FRST_DT, LAST_WRTR, LAST_DT
		FROM BRD
		WHERE FRST_WRTR = #{memId}
	</select>
	
	<!-- 미처리 신고 수 -->
	<select id="brdReptTotal" parameterType="hashMap" resultType="int">
		SELECT COUNT(*) FROM BRD
		WHERE REPRT_CK = 'N' AND REPRT >= '1'
		<include refid="brdWhere"></include>
	</select>
	
	<!-- 회원 경고 상태 변경 -->
	<update id="updateWarningStatus" parameterType="memVO">
		UPDATE MEM
		    SET
		        WRN_ST = #{wrnSt}
		WHERE
		    MEM_ID = #{memId}
	</update>
	
	<!-- 회원 경고 개수 증가 -->
	<update id="updateWarningCnt" parameterType="memVO">
		UPDATE MEM
		    SET
		        WRN_CNT = #{wrnCnt} + 1
		WHERE
		    MEM_ID = #{memId}
	</update>
	
	<!-- 차단 회원 등록-->
	<insert id="insertInrtMem" parameterType="hashMap">
		<selectKey resultType="int" order="BEFORE" keyProperty="intrId">
			SELECT NVL(MAX(INTR_ID),0)+1 FROM INTR_MEM
		</selectKey>
		INSERT INTO INTR_MEM (
		    INTR_ID, MEM_ID, INTR_RESN,
		    INTR_ST, INTR_ED
		)
		SELECT
		    #{intrId}, MEM.MEM_ID, #{intrResn}, SYSDATE, SYSDATE + 30
		FROM
		    MEM
		WHERE
		    MEM.MEM_ID = #{memId}
	</insert>
	
	<!-- 차단 회원 등록 삭제 -->
	<delete id="deleteIntrMem" parameterType="hashMap">
		DELETE FROM INTR_MEM
		WHERE
		    MEM_ID =#{memId}
	</delete>
	
	<!-- 예약 완료 -->
	<select id="rsvList" parameterType="hashMap" resultType="adMemRsvListVO">
		SELECT 
		    A.RSV_ID, A.RSV_CODE, A.RSV_DT, B.RSV_ST, B.RSV_ED, A.MEM_ID, 
		    A.BUSI_ID, C.BUSI_NM, TO_CHAR(B.RM_NUM) AS RM_NUM, C.BUSI_CODE
		FROM 
		    RSV A
		JOIN 
		    RSV_STY B ON A.RSV_ID = B.RSV_ID
		JOIN 
		    BUSI C ON A.BUSI_ID = C.BUSI_ID
		WHERE 
		    A.MEM_ID = #{memId}
		    AND A.RSV_CODE = #{rsvCode}
		UNION
		SELECT 
		    A.RSV_ID, A.RSV_CODE, A.RSV_DT, B.RSV_ST, B.RSV_ED, A.MEM_ID, A.BUSI_ID, C.BUSI_NM, B.CAR_NUM, C.BUSI_CODE
		FROM 
		    RSV A
		JOIN 
		    RSV_RNTCAR B ON A.RSV_ID = B.RSV_ID
		JOIN 
		    BUSI C ON A.BUSI_ID = C.BUSI_ID
		WHERE 
		    A.MEM_ID = #{memId}
		    AND A.RSV_CODE = #{rsvCode}
		ORDER BY RSV_DT DESC
	</select>
	
	<!-- 채팅 회원 목록 -->
	<select id="chatMemList" resultType="memVO">
		SELECT
			MEM_ID, MEM_NM
		FROM
			MEM
		WHERE
			ENABLED = '1'
	</select>
	
	<!-- 회원 엑셀 다운로드 -->
	<select id="excelList" resultType="memVO">
		SELECT
		    MEM_ID, MEM_NM, MEM_BIR, MEM_GEN, MEM_TEL, MEM_EMAIL, MEM_ADDR1,
		    MEM_ADDR2, MAIL_AGR, MEM_MLG, MEM_MBTI, GRAD_ID, ENABLED, JOIN_DT, WHDWL_DT
		FROM MEM
	</select>
	
	<!-- 활성 회원수 -->
	<select id="enableMem" resultType="int">
		SELECT COUNT(*) FROM MEM WHERE ENABLED = 1
	</select>
	
	<!-- 비활성 회원수 -->
	<select id="disableMem" resultType="int">
		SELECT COUNT(*) FROM MEM WHERE ENABLED = 0
	</select>
	
	<!-- 브론즈 등급 -->
	<select id="bronze" resultType="int">
		SELECT COUNT(*) FROM MEM WHERE GRAD_ID = 'G01'
	</select>
	
	<!-- 실버 등급 -->
	<select id="silver" resultType="int">
		SELECT COUNT(*) FROM MEM WHERE GRAD_ID = 'G02'
	</select>
	
	<!-- 골드 등급 -->
	<select id="gold" resultType="int">
		SELECT COUNT(*) FROM MEM WHERE GRAD_ID = 'G03'
	</select>
	
	<!-- 다이아 등급 -->
	<select id="dia" resultType="int">
		SELECT COUNT(*) FROM MEM WHERE GRAD_ID = 'G04'
	</select>
	
	<select id="second" parameterType="hashMap" resultType="int">
		SELECT
			COUNT(*)
		FROM
			ADMIN
		WHERE 
			ADMIN_ID = #{id} AND ADMIN_PW = #{password}
	</select>
</mapper>















