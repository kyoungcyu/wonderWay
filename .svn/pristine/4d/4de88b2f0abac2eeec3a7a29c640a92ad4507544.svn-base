<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.ddit.member.mapper.TripBoardMapper">

	<sql id="where">
		<!-- 전체검색 -->
		<!-- 제목, 작성자, 내용 -->
		<if test="keyword!=null">
			AND (
		        BRD_TT LIKE '%' || #{keyword} || '%' OR
		        FRST_WRTR LIKE '%' || #{keyword} || '%' OR 
		        BRD_CNTN LIKE '%' || #{keyword}|| '%'
			)
		</if>
	</sql>
	
	<sql id="sort">
		<!-- 정렬 -->
		<if test="sort!=''">
			<choose>
				<when test="sort=='frstDt'">
					ORDER BY FRST_DT DESC
				</when>
				<when test="sort=='brdLike'">
					ORDER BY BRD_LIKE DESC
				</when>
				<when test="sort=='inqCnt'">
					ORDER BY INQ_CNT DESC
				</when>
			</choose>	
		</if>
	</sql>

<!-- 여행후기 메인 글 정렬 최신순 -->
<select id="tripRecList" parameterType ="hashMap" resultType="brdVO">
		SELECT
		    BRD_ID, BRD_KND, BRD_TT, BRD_CNTN, BRD_DEL, 
		    INTR, INTR_RESN, BRD_LIKE, REPRT, TOUR_ID, REPRT_CK, 
		    FRST_WRTR, FRST_DT, LAST_WRTR, LAST_DT, ATTACH_ID,INQ_CNT
		FROM BRD
		WHERE BRD_KND='D01' AND BRD_DEL !='Y'
		ORDER BY FRST_DT DESC 
</select>

<!-- 여행후기 메인 글 인기순(좋아요순) 정렬  -->
<select id="tripLikeList" parameterType ="hashMap" resultType="brdVO">
		SELECT
		    BRD_ID, BRD_KND, BRD_TT, BRD_CNTN, BRD_DEL, 
		    INTR, INTR_RESN, BRD_LIKE, REPRT, TOUR_ID, REPRT_CK, 
		    FRST_WRTR, FRST_DT, LAST_WRTR, LAST_DT, ATTACH_ID,INQ_CNT
		FROM BRD
		WHERE BRD_KND='D01' AND BRD_DEL !='Y'
		ORDER BY BRD_LIKE DESC 
</select>

<!-- 여행후기 조회수 -->
<update id="tripViewCnt" parameterType="String">
	UPDATE BRD
	SET INQ_CNT = INQ_CNT + 1
	WHERE BRD_ID = #{brdId}
</update>

<!-- 여행후기 글 목록  LIST -->
<select id="tripBoardList" parameterType ="hashMap" resultType="brdVO">
		WITH T AS(
		SELECT
			ROW_NUMBER() OVER(ORDER BY BRD_ID ASC) RNUM,
		    BRD_ID, BRD_KND, BRD_TT, BRD_CNTN, BRD_DEL, 
		    INTR, INTR_RESN, BRD_LIKE, REPRT, TOUR_ID, REPRT_CK, 
		    FRST_WRTR, FRST_DT, LAST_WRTR, LAST_DT, ATTACH_ID,INQ_CNT
		FROM BRD
		WHERE BRD_KND='D01' AND BRD_DEL !='Y'
		<include refid="where"></include>
		<include refid="sort"></include>
		)
		SELECT T.*
		FROM   T
		WHERE  T.RNUM BETWEEN (#{currentPage} * #{size}) - (#{size} - 1) 
						  AND (#{currentPage} * #{size})
</select>

<!-- 여행후기 글 상세보기 -->
<select id="tripDetail" parameterType ="brdVO" resultType="brdVO">
		SELECT
		    BRD_ID, BRD_KND, BRD_TT, BRD_CNTN, BRD_DEL, 
		    INTR, INTR_RESN, BRD_LIKE, REPRT, TOUR_ID, REPRT_CK, 
		    FRST_WRTR, FRST_DT, LAST_WRTR, LAST_DT, ATTACH_ID,INQ_CNT
		FROM BRD
		WHERE BRD_KND='D01'AND BRD_ID=#{brdId} AND BRD_DEL !='Y'
</select>



<!-- 게시글 좋아요 기능 -->
<!-- 1-1) 게시글 좋아요 클릭 시  -->
<update id="likeBrd" parameterType="likeBrdVO">
	UPDATE BRD SET LIKE_DT=LIKE_DT+1 WHERE BRD_ID=#{brdId}
</update>
<!-- 1-2) (LIKE_BRD 테이블)게시글 좋아요를 클릭한 회원아이디, 게시판아이디, 언제 INSERT-->
<insert id="insertBrd" parameterType="likeBrdVO">
	INSERT INTO LIKE_BRD(MEM_ID, BRD_ID, LIKE_DT) VALUES(#{memId},#{brdId},SYSDATE);
</insert>

<!-- 2-1) 게시글 좋아요 한번 더 클릭하면 비활성화 -->
<update id="disLikeBrd" parameterType="LikeBrdVO">
	UPDATE BRD SET LIKE_DT=LIKE_DT-1 WHERE BRD_ID=#{brdId}
</update>

<!-- 2-2) (LIKE_BRD 테이블)게시글 좋아요를 클릭한 회원아이디, 게시판아이디, 언제 DELETE-->
<delete id="deleteBrd" parameterType="likeBrdVO">
	DELETE FROM LIKE_BRD WHERE MEM_ID = #{memId} AND BRD_ID=#{brdId}
</delete>





 <!-- 1.글 등록 -->
<insert id="tripAddWrite" parameterType="brdVO">
	<selectKey resultType="String" order="BEFORE" keyProperty="brdId">
		SELECT NVL(SUBSTR(MAX(BRD_ID),1,11)||TRIM(TO_CHAR(SUBSTR(MAX(BRD_ID),-1,3)+1,'000')),#{brdKnd}||TO_CHAR(SYSDATE,'YYYYMMDD')||'001')
		FROM BRD WHERE BRD_KND = #{brdKnd} AND SUBSTR(BRD_ID,4,8) = TO_CHAR(SYSDATE,'YYYYMMDD')
	</selectKey>
	
	INSERT INTO BRD (BRD_ID, BRD_KND, BRD_TT, BRD_CNTN, BRD_DEL, INTR, INTR_RESN, BRD_LIKE, REPRT, TOUR_ID, REPRT_CK, FRST_WRTR, FRST_DT, LAST_WRTR, LAST_DT, ATTACH_ID,INQ_CNT)
	VALUES (#{brdId}, #{brdKnd}, #{brdTt}, #{brdCntn}, #{brdDel}, #{intr}, #{intrResn}, #{brdLike}, #{reprt}, #{tourId}, #{reprtCk}, #{frstWrtr}, SYSDATE, #{lastWrtr}, #{lastDt},null,0)
</insert>

<!-- 2.첨부파일 테이블 -->
<insert id="attachInsert" parameterType="attachVO">
	<selectKey resultType="int" order="BEFORE" keyProperty="attachId">
		SELECT NVL(MAX(ATTACH_ID),0)+1 FROM ATTACH
	</selectKey>

	INSERT INTO ATTACH(ATTACH_ID, ATTACH_DEL) VALUES(#{attachId},#{AttachDel})
</insert>

<!-- 3.첨부파일_상세 테이블  -->
<update id="attachDeInsert" parameterType="java.util.List">
	<foreach collection="list" item="attachDeVO" index="idx" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
		INTO ATTACH_DE(ATTACH_DE_ID, ATTACH_ID, ORG_NM, FILE_NM, SAVE_PATH, FILE_SZ, FILE_TY, FILE_DEL) 
		VALUES(#{idx}+1,#{attachDeVO.attachId},#{attachDeVO.orgNm},#{attachDeVO.fileNm},
		#{attachDeVO.savePath},#{attachDeVO.fileSz},#{attachDeVO.fileTy},'N')
	</foreach>
</update>

<!-- 4.brd 테이블의  ATTACH_ID 처리 -->
<update id="attachIdUpdate" parameterType="brdVO">
	UPDATE BRD
	SET ATTACH_ID = #{attachId}
	WHERE BRD_ID = #{brdId}
</update>


<!-- 여행후기 글 수정 -->
<update id="tripUpdate" parameterType="brdVO">
UPDATE BRD SET BRD_TT = #{brdTt},
			   BRD_CNTN = #{brdCntn},
			   TOUR_ID = #{tourId},
			   LAST_WRTR = #{lastWrtr},
			   LAST_DT=#{lastDt},
			   ATTACH_ID=#{attachId}
	  	   WHERE BRD_ID = #{brdId}
			   
</update>

<!-- 여행후기 글 삭제 -->
<update id="tripDelete" parameterType="brdVO">
UPDATE BRD SET BRD_DEL = 'Y' 
		   WHERE BRD_ID = #{brdId}
</update>

<!-- 페이징 처리 -->
<!-- 총 게시글 갯수 출력 -->
<select id="countBoard" parameterType="hashMap" resultType="int">
	SELECT COUNT(*) FROM BRD WHERE BRD_KND='D01'
	<include refid="where"></include>
	<include refid="sort"></include>
</select>


</mapper>