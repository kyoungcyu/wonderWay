package kr.or.ddit.business.controller;

import java.io.File;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.business.service.BsBusiService;
import kr.or.ddit.business.service.BsCheckInService;
import kr.or.ddit.util.CommonFile;
import kr.or.ddit.util.PagingDTO;
import kr.or.ddit.vo.AttachDeVO;
import kr.or.ddit.vo.BusiVO;
import kr.or.ddit.vo.CarCheckVO;
import kr.or.ddit.vo.CheckInVO;
import kr.or.ddit.vo.RvwVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/business")
@Controller
public class BsBusiController {

	@Autowired
	BsBusiService bsBusiService;

	@Autowired
	BsCheckInService bsCheckInService;

	
	/**
	 * 업체 메인페이지. 오늘의 예약자와 예약 만기자를 알 수 있다. 
	 * @param model
	 * @param authentication
	 * @param session
	 * @param currentPage1
	 * @param currentPage2
	 * @return
	 */
	@GetMapping("/main") // home 페이지
	public String main(Model model, Authentication authentication, HttpSession session
			, @RequestParam(value = "currentPage1", required = false, defaultValue = "1")
			int currentPage1
			, @RequestParam(value = "currentPage2", required = false, defaultValue = "1")
			int currentPage2) {
		
		//--------시큐리티가 넣어놓은 session에서 username가져오고 Httpsession에 넣는다 -------------//
		Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal();
		UserDetails userDetails = (UserDetails) authentication.getPrincipal();

        log.info("session getUsername : " + userDetails.getUsername());
		
        String lginId = userDetails.getUsername();
                
        //------------------ 메인 시작 --------------------//
        //로그인한 회원 정보 가져옴
        BusiVO busiVO = this.bsBusiService.userDetail(lginId);

        String imgPath = this.bsBusiService.getImgPath(busiVO.getBusiId());
        busiVO.setBusiImg(imgPath);
        
		log.info("busiVO : " + busiVO);
		
		model.addAttribute("data", busiVO);
		session.setAttribute("vo", busiVO);//로그인한 회원의 로그인아이디 session에 저장
		
		//------------------- 필요한 쿼리 실행 --------------------//
		
	// 1 오늘 입실자
		String busiId = busiVO.getBusiId();
		// 1. 맵선언해서 페이징처리 파라미터와 원래파라미터 넣기
		Map<String,Object> checkInMap = new HashMap<String, Object>();
		checkInMap.put("busiId",busiId);
		checkInMap.put("currentPage",currentPage1);
		
		// list (+페이징처리값까지) 받아오기
		List<CheckInVO> todayComeList= bsCheckInService.todayCome(checkInMap);
		
		// totalIn
		int totalIn= bsCheckInService.totalIn(busiId);
		
		// 페이징처리까지한 list보내기
		model.addAttribute("checkInData", new PagingDTO<CheckInVO>(totalIn, currentPage1, 4, todayComeList));
		
	//2. 오늘 퇴실자
		// 1. 맵선언해서 페이징처리 파라미터와 원래파라미터 넣기
		Map<String,Object> checkOutMap = new HashMap<String, Object>();
		checkOutMap.put("busiId",busiId);
		checkOutMap.put("currentPage",currentPage2);
		
		// list (+페이징처리값까지) 받아오기
		List<CheckInVO> todayOutList= bsCheckInService.todayOut(checkOutMap);
		
		// totalOut
		int totalOut= bsCheckInService.totalOut(busiId);
		
		// 페이징처리까지한 list보내기
		model.addAttribute("checkOutData", new PagingDTO<CheckInVO>(totalOut, currentPage2, 4, todayOutList));
				
// 오늘의 예약, 취소, 리뷰
		int todayRsv= bsCheckInService.todayRsv(busiId);
		int todayRfd= bsCheckInService.todayRfd(busiId);
		int todayRvw= bsCheckInService.todayRvw(busiId);

		model.addAttribute("todayRsv", todayRsv);
		model.addAttribute("todayRfd", todayRfd);
		model.addAttribute("todayRvw", todayRvw);
		
		return "business/main";
	}

	@ResponseBody
	@PostMapping("/main/checkInAjax")
	public int checkInAjax(@RequestParam("rsvId") String rsvId) {
		
		int result = bsCheckInService.checkIn(rsvId);
		
		return result;
	}
	
	@ResponseBody
	@PostMapping("/main/checkOutAjax")
	public int checkOutAjax(@RequestParam("rsvId") String rsvId) {
		
		int result = bsCheckInService.checkOut(rsvId);
		
		return result;
	}
			
	
	
	@GetMapping("/myBusi/carNum")
	public String carNum() {
		log.info("왓다!");

		return "business/myBusi/carNum";
	}
	@GetMapping("/myBusi/carNumVideo")
	public String carNumVideo() {
		log.info("왓다!");
		
		return "business/myBusi/carNumVideo";
	}
//	
//	@PostMapping("/updateImg")
//	@ResponseBody
//	public int updateImg( Model model ,BusiVO busiVO, HttpSession session) {
//		BusiVO sBusiVO =  (BusiVO) session.getAttribute("vo");
//		model.addAttribute("data", sBusiVO);
//		
////		String setImg =busiVO.getBusiImg();		
////		sBusiVO.setBusiImg(setImg);
//		sBusiVO.setUploads(busiVO.getUploads());
//		
//		log.info("busiVO:" +sBusiVO); 
//		
//		int result =this.bsBusiService.updateImg(sBusiVO);
//		
//		return result;
//	}

	@PostMapping("/myBusi/success")
	@ResponseBody
	public List<CarCheckVO> success(BusiVO busiVO, HttpSession session) {
		BusiVO sessionVO = (BusiVO) session.getAttribute("vo");

		log.info("왓다!");
		log.info("BusiVO" + busiVO);

		busiVO.setBusiId(sessionVO.getBusiId());

		List<CarCheckVO> data = (List<CarCheckVO>) this.bsBusiService.carNum(busiVO);

		log.info("data :" + data);

		return data;

	}

	@PostMapping("/myBusi/success2")
	@ResponseBody
	public List<CarCheckVO> success2(@RequestBody CarCheckVO carCheckVO) {

		List<CarCheckVO> data = (List<CarCheckVO>) this.bsBusiService.memDetail(carCheckVO);

		log.info("data :" + data);

		return data;

	}

	@GetMapping("/myBusi/unmannedCheckIn")
	public String unmannedCheckIn() {

		return "business/myBusi/unmannedCheckIn";
	}

	@ResponseBody
	@PostMapping("/myBusi/completeCheckIn")
	public CheckInVO completeCheckIn(@RequestParam("memId") String memId) {
		log.info("memId : " + memId);

		CheckInVO vo = this.bsCheckInService.checkRsv(memId);

		log.info("vo : " + vo);

		int cnt = 0;

		if (vo != null) {
			String rsvId = vo.getRsvId();
			cnt = this.bsCheckInService.checkIn(rsvId);
		}

		if (cnt > 0) {
			vo.setCheckIn(String.valueOf(cnt));
			return vo;
		} else {
			return null;
		}

	}

}
