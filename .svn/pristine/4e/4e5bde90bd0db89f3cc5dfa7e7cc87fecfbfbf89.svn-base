<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.ddit.member.mapper.MypageMapper">

	<!-- 마이페이지 - 내 정보 > 가져오기 -->
	<select id="detailMyInfo" parameterType="memVO"
		resultType="memVO">
		SELECT MEM_ID, MEM_NM, MEM_ENM, MEM_FMNM, MEM_PW, MEM_BIR,
		MEM_GEN,
		MEM_TEL, MEM_EMAIL, MEM_ADDR1, MEM_ADDR2, MAIL_AGR, MEM_MLG,
		WRN_CNT, WRN_ST, MEM_MBTI, GRAD_ID, MEM_IMG, ENABLED, JOIN_DT,
		WHDWL_DT
		FROM
		MEM
		WHERE MEM_ID=#{memId}
	</select>

	<!-- 마이페이지 - 내 정보 > 수정하기 -->
	<update id="updateMyInfo" parameterType="memVO">
		UPDATE MEM
		SET MEM_ENM =
		#{memEnm},
		MEM_FMNM = #{memFmnm},
		MEM_BIR = #{memBir},
		MEM_ADDR1=#{memAddr1},
		MEM_ADDR2 =#{memAddr2},
		MEM_MBTI=#{memMbti},
		MEM_IMG=#{memImg}

		WHERE MEM_ID=#{memId}
	</update>

	<!-- 마이페이지 - 내 정보 > 이메일 변경 -->
	<update id="updateMyEmail" parameterType="memVO">
		UPDATE MEM
		SET MEM_EMAIL
		=#{memEmail}
		WHERE MEM_ID=#{memId}
	</update>

	<!-- 마이페이지 - 내 정보 > 비밀번호 변경 -->
	<update id="updateMyPass" parameterType="memVO">
		UPDATE MEM
		SET MEM_PW
		=#{memPw}
		WHERE MEM_ID=#{memId}
	</update>

	<!-- 회원탈퇴 -->
	<update id="deleteMem" parameterType="memVO">
		UPDATE MEM
		SET ENABLED=0,
		WHDWL_DT = SYSDATE
		WHERE MEM_ID=#{memId}
	</update>

	<!-- 예약내역 -->
	<!-- 숙박 전체조회 -->
	<select id="allBooking" parameterType="hashMap" resultType="mmRsvListVO">
		SELECT DISTINCT
		A. RSV_ID,
		A.RSV_CODE,
		A.MEM_ID,
		A.BUSI_ID,
		B.RSV_ST AS
		CHECKIN,
		B.RSV_ED AS CHECKOUT,
		E.CHCK_IN AS CHECKINTIME,
		E.CHCK_OUT AS
		CHECKOUTTIME,
		B.RM_ID,
		B.RM_NUM,
		D.RM_NM,
		E.BUSI_NM,
		E.BUSI_LOC,
		E.BUSI_CODE

		FROM RSV A,
		RSV_STY B,
		RM_DE C,
		RM D,
		BUSI E

		WHERE E.BUSI_ID =
		A.BUSI_ID
		AND A.RSV_ID = B.RSV_ID
		AND B.RM_ID = C.RM_ID
		AND C.RM_ID=
		D.RM_ID
		AND A.MEM_ID=#{memId}
		AND
		A.RSV_CODE=#{rsvCode}
	</select>
	
<!-- 숙소. 예약 취소 30일 이전 건(환불 100% x) 내역  K03-->	
<select id="rsvCancel30Bef" parameterType="hashMap" resultType="mmRsvListVO">
     SELECT DISTINCT
		A.RSV_ID,
		A.RSV_CODE,
		A.MEM_ID,
		A.BUSI_ID,
        A.RSV_DT,
		B.RSV_ST AS CHECKIN,
		B.RSV_ED AS CHECKOUT,
		E.CHCK_IN AS CHECKINTIME,
		E.CHCK_OUT AS CHECKOUTTIME,
		B.RM_ID,
		B.RM_NUM,
		D.RM_NM,
		E.BUSI_NM,
		E.BUSI_LOC,
		E.BUSI_CODE

		FROM RSV A,
		RSV_STY B,
		RM_DE C,
		RM D,
		BUSI E,
        PAY F,
        RFD_REQ G

		WHERE E.BUSI_ID = A.BUSI_ID
		AND A.RSV_ID = B.RSV_ID
		AND B.RM_ID = C.RM_ID
		AND C.RM_ID=D.RM_ID
        AND A.RSV_ID=F.RSV_ID
        AND F.PAY_ID= G.PAY_ID
        AND A.MEM_ID=#{memId} 
        AND A.RSV_CODE=#{rsvCode}
        AND B.RSV_ST - SYSDATE &lt; 30
</select>
	<!-- K02 결제확인 -->
	<!-- 리뷰작성 -> 1. RSV_ST < TODAY  -->
	<select id="completePay"  parameterType="hashMap" resultType="mmRsvListVO">
	 SELECT DISTINCT
		A.RSV_ID,
		A.RSV_CODE,
		A.MEM_ID,
		A.BUSI_ID,
        A.RSV_DT,
		B.RSV_ST AS CHECKIN,
		B.RSV_ED AS CHECKOUT,
		E.CHCK_IN AS CHECKINTIME,
		E.CHCK_OUT AS
		CHECKOUTTIME,
		B.RM_ID,
		B.RM_NUM,
		D.RM_NM,
		E.BUSI_NM,
		E.BUSI_LOC,
		E.BUSI_CODE

		FROM RSV A,
		RSV_STY B,
		RM_DE C,
		RM D,
		BUSI E,
        PAY F

		WHERE E.BUSI_ID = A.BUSI_ID
		AND A.RSV_ID = B.RSV_ID
		AND B.RM_ID = C.RM_ID
		AND C.RM_ID=D.RM_ID
        AND A.RSV_ID=F.RSV_ID
        AND A.MEM_ID=#{memId}
        AND A.RSV_CODE=#{rsvCode}
        AND B.RSV_ST &lt; SYSDATE
        </select>	
	
	<!-- 2. 입금확인  RSV_ST >sysdate - K02-->
	<select id="completePayBefUse"  parameterType="hashMap" resultType="mmRsvListVO">
	 SELECT DISTINCT
		A.RSV_ID,
		A.RSV_CODE,
		A.MEM_ID,
		A.BUSI_ID,
        A.RSV_DT,
		B.RSV_ST AS CHECKIN,
		B.RSV_ED AS CHECKOUT,
		E.CHCK_IN AS CHECKINTIME,
		E.CHCK_OUT AS
		CHECKOUTTIME,
		B.RM_ID,
		B.RM_NUM,
		D.RM_NM,
		E.BUSI_NM,
		E.BUSI_LOC,
		E.BUSI_CODE

		FROM RSV A,
		RSV_STY B,
		RM_DE C,
		RM D,
		BUSI E,
        PAY F
        

		WHERE E.BUSI_ID = A.BUSI_ID
		AND A.RSV_ID = B.RSV_ID
		AND B.RM_ID = C.RM_ID
		AND C.RM_ID=D.RM_ID
        AND A.RSV_ID=F.RSV_ID
        AND A.MEM_ID=#{memId}
        AND A.RSV_CODE=#{rsvCode}
        AND B.RSV_ST &gt; SYSDATE
        </select>
	
	
	
	
	
	
	
	<!-- 렌터카 조회 -->
	<select id="rntBooking" parameterType="hashMap" resultType="mmRsvRntcarListVO">
		SELECT DISTINCT
		 A.RSV_ID
		,A.RSV_CODE
		,A.RSV_DT
		,A.MEM_ID
		,A.BUSI_ID

		,B.RSV_ST
		,B.RSV_ED
		,B.RNT_ST
		,B.RNT_ED

		,C.CAR_NUM
		,C.CAR_CODE
		,C.CAR_KND
		,C.CAR_OP
		,C.CAR_IMG

		FROM RSV A
		LEFT JOIN RSV_RNTCAR B ON A.RSV_ID = B.RSV_ID
		LEFT JOIN CAR C ON A.BUSI_ID = C.BUSI_ID
		WHERE
		A.MEM_ID=#{memId} AND B.CAR_NUM=C.CAR_NUM
		AND A.RSV_CODE=#{rsvCode}
	</select>
	
	<!-- 예약내역 조회 (예약테이블에서)-->
	<select id="rsvDetail" parameterType="rsvVO" resultType="rsvVO">
	SELECT RSV_ID, RSV_CODE, RSV_DT, TO_CHAR(RSV_DT,'YYYY-MM-DD') RSV_DT_STR, MEM_ID 
	FROM RSV
	WHERE RSV_ID=#{rsvId} AND RSV_CODE =#{rsvCode} 
	<if test="memId!=null and memId!=''">
	AND MEM_ID=#{memId}
	</if>
	</select>
	
	<!-- 취소확정 리스트 -> 'K04' / 'K03' -->
	<select id="rsvCancelK04" parameterType="hashMap" resultType="mmRsvListVO">
	SELECT DISTINCT
		A.RSV_ID,
		A.RSV_CODE,
		A.MEM_ID,
		A.BUSI_ID,
        A.RSV_DT,
		B.RSV_ST AS CHECKIN,
		B.RSV_ED AS CHECKOUT,
		E.CHCK_IN AS CHECKINTIME,
		E.CHCK_OUT AS
		CHECKOUTTIME,
		B.RM_ID,
		B.RM_NUM,
		D.RM_NM,
		E.BUSI_NM,
		E.BUSI_LOC,
		E.BUSI_CODE

		FROM RSV A,
		RSV_STY B,
		RM_DE C,
		RM D,
		BUSI E,
        PAY F,
        RFD_REQ G

		WHERE E.BUSI_ID = A.BUSI_ID
		AND A.RSV_ID = B.RSV_ID
		AND B.RM_ID = C.RM_ID
		AND C.RM_ID=D.RM_ID
        AND A.RSV_ID=F.RSV_ID
        AND F.PAY_ID= G.PAY_ID
        AND A.MEM_ID=#{memId}
        AND A.RSV_CODE=#{rsvCode}
	</select>
	
	
	<!-- 결제대기 취소-->
	
	
	
	
	<!-- 예약완료 취소 - 1. 환불 100% 인 경우 30일 전-->
	
	<!-- 1)환불요청 = 환불승인-->
	<insert id="rfdOK" parameterType="rfdReqVO">
	INSERT INTO RFD_REQ (
	    PAY_ID,
	    RFD_PR,
	    RFD_RESN,
	    RFD_DT,
	    RFD_REQ_DT
	) VALUES (
	    (SELECT PAY_ID FROM PAY WHERE RSV_ID=#{rsvId}),
	    (SELECT PAY_PR FROM PAY WHERE RSV_ID=#{rsvId}),
	    #{rfdResn},
	    SYSDATE,
	    SYSDATE
	)
	</insert>
	<!-- 2) PAY 테이블 RFD_CK='Y'변경 -->
	<update id="rfdCk" parameterType="payVO">
		UPDATE PAY SET RFD_CK='Y'
		WHERE RSV_ID=#{rsvId}
	</update>
	<!-- 3) RSV 테이블 RSV_CODE='K04' -->
	<update id="rfdCodeK04" parameterType="rsvVO">
		UPDATE RSV SET RSV_CODE='K04'
		WHERE RSV_ID=#{rsvId}
	</update>	
	

	<!-- 예약완료 취소 - 2. 환불 100%가 아닌 경우-->
	<!-- 2-1 RFD_REQ 테이블 insert 요청-->
	<insert id="rfdRequest" parameterType="rfdReqVO" >
	INSERT INTO RFD_REQ (
	    PAY_ID,
	    RFD_PR,
	    RFD_RESN,
	    RFD_REQ_DT
	) VALUES (
	    (SELECT PAY_ID FROM PAY WHERE RSV_ID=#{rsvId}),
	    (SELECT PAY_PR FROM PAY WHERE RSV_ID=#{rsvId}),
	    #{rfdResn},
	    SYSDATE
	)	
	</insert>	
	<!-- 2-2 예약테이블 rsv_code k03으로 변경-->
	<update id="rsvCodeK03Change" parameterType="rsvVO">
	UPDATE RSV SET RSV_CODE='K03' WHERE RSV_ID=#{rsvId}
	</update>



	<!-- 쿠폰함 -->
	<!-- 등급조회 -->
	<select id="myGrad" parameterType="String" resultType="gradVO">
		SELECT
		GRAD_ID
		, GRAD_NM
		FROM GRAD
		WHERE
		GRAD_ID =(SELECT GRAD_ID
		FROM
		MEM
		WHERE
		MEM_ID=#{memId})
	</select>


	<resultMap type="cupnVO" id="cupnMap">
		<result property="cupnId" column="CUPN_ID" />
		<result property="cupnCl" column="CUPN_CL" />
		<result property="cupnRt" column="CUPN_RT" />
		<result property="cupnDc" column="CUPN_DC" />
		<result property="cupnExp" column="CUPN_EXP" />
		<result property="gradId" column="GRAD_ID" />
		<collection property="hcupnVOList" resultMap="hcupnVOMap"></collection>
	</resultMap>

	<resultMap type="hCupnVO" id="hcupnVOMap">
		<result property="usable" column="USABLE" />
		<result property="useDt" column="USE_DT" />
		<result property="memId" column="MEM_ID" />
		<result property="cupnId" column="CUPN_ID" />
	</resultMap>


	<!-- 쿠폰함 조회 -->
	<select id="myCoupon" resultMap="cupnMap">
		SELECT A.CUPN_ID, A.CUPN_CL,
		A.CUPN_RT, A.CUPN_DC, A.CUPN_EXP, A.GRAD_ID,
		B.USABLE,B.USE_DT
		FROM CUPN
		A
		LEFT JOIN H_CUPN B ON A.CUPN_ID=B.CUPN_ID
		WHERE B.MEM_ID=#{memId}
	</select>

	<!-- 쿠폰존 조회 -->
	<select id="couponZone" parameterType="cupnVO"
		resultType="cupnVO">
		SELECT
		CUPN_ID, CUPN_CL, CUPN_RT, CUPN_DC, CUPN_EXP, GRAD_ID
		FROM
		CUPN
		WHERE
		GRAD_ID IS NULL
	</select>


	<!-- 쿠폰 다운로드 -->
	<insert id="downCoupon" parameterType="hCupnVO">
		INSERT INTO H_CUPN(USABLE,
		MEM_ID, CUPN_ID) VALUES
		('N',#{memId},#{cupnId})

	</insert>


	<!-- 나의 작성글 -->



	<!-- 1. 입금완료 상품 조회 K02 -->
	<select id="completeBooking" parameterType="hashMap" resultType="mmStyCmpRsvListVO">
		SELECT 
			A.RSV_ID, A.MEM_ID, A.RSV_CODE,B.RSV_ST, B.RSV_ED,D.BUSI_ID,E.BUSI_NM,B.RM_ID,D.RM_NM
		FROM RSV A
			LEFT JOIN RSV_STY B ON A.RSV_ID=B.RSV_ID
			LEFT JOIN RM_DE C ON C.RM_ID = B.RM_ID
			LEFT JOIN RM D ON D.RM_ID = C.RM_ID
			LEFT JOIN BUSI E ON D.BUSI_ID=E.BUSI_ID
		WHERE 
			A.MEM_ID = #{memId} AND RSV_CODE = 'K02' AND B.RSV_ED &lt;= SYSDATE
	</select>


	<!-- 리뷰 조회 -->
	<select id="myReviewList" parameterType="brdVO"
		resultType="brdVO">
		SELECT
		ROW_NUMBER() OVER(ORDER BY BRD_ID ASC) RNUM,
		BRD_ID, BRD_KND, BRD_TT,
		BRD_CNTN, BRD_DEL,
		INTR, INTR_RESN, BRD_LIKE, REPRT, TOUR_ID, REPRT_CK,
		FRST_WRTR, FRST_DT, LAST_WRTR, LAST_DT, ATTACH_ID,INQ_CNT
		FROM BRD
		WHERE BRD_KND='D04' AND BRD_DEL !='Y' AND FRST_WRTR= #{frstWrtr}
	</select>



</mapper>