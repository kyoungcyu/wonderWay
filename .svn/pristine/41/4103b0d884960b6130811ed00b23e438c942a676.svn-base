package kr.or.ddit.member.controller;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.security.Principal;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.inject.Inject;
import javax.mail.Session;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.security.authentication.AnonymousAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.FieldError;
import org.springframework.validation.ObjectError;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.member.service.MmAcmService;
import kr.or.ddit.member.service.MmCartService;
import kr.or.ddit.util.ItemDTO;
import kr.or.ddit.util.PagingDTO;
import kr.or.ddit.vo.BusiVO;
import kr.or.ddit.vo.CvfcVO;
import kr.or.ddit.vo.MemVO;
import kr.or.ddit.vo.RmDeVO;
import kr.or.ddit.vo.RmVO;
import kr.or.ddit.vo.RvwVO;

@RequestMapping("/member/tripBoard")
@Controller
public class AiController{
	private static final Logger log = LoggerFactory.getLogger(AiController.class);
	


	/** 숙소 검색 메인페이지로
	 * @param model
	 * @return
	 */
	@GetMapping("/tripPhoto")
	public String photo(Model model) {

		return "member/tripBoard/tripPhoto";
	}
	
	
	@ResponseBody
	@PostMapping(value="/upload")
	public String ai(MultipartFile uploadedPhoto) {
		log.info("원본파일명 : " + uploadedPhoto.getOriginalFilename());
		log.info("이미지크기 : " + uploadedPhoto.getSize());
		log.info("컨텐츠타입 : " + uploadedPhoto.getContentType());
		
		String uploadFolder= "C:\\workspace_python\\PConv-Keras-master";
		String uploadFileName = uploadedPhoto.getOriginalFilename();
		
		
		//파일명 중복 방지 시작-------------
		//java.util.UUID => 랜덤값 생성
		UUID uuid = UUID.randomUUID();
		//원래의 파일 이름과 구분하기 위해 uuid값_원본파일명
		uploadFileName = uuid.toString() + "_" + uploadFileName;
		//파일명 중복 방지 끝-------------
		
		//File객체 설계(복사할 대상 경로, 파일명)
		File saveFile = new File(uploadFolder, uploadFileName);
		//이미지원본파일객체.복사하겠다(설계대로)
		try {
			//파일 복사 실행
			uploadedPhoto.transferTo(saveFile);
		} catch (IllegalStateException | IOException e) {
			e.printStackTrace();
		}
	
		
		return uploadFileName;
	}
	
	
	
}
