package kr.or.ddit.business.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.business.service.BsCalculService;
import kr.or.ddit.util.PagingDTO;
import kr.or.ddit.vo.BusiVO;
import kr.or.ddit.vo.CalculVO;
import kr.or.ddit.vo.RvwVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/business/calcul")
@Controller
public class BsCalculController {
	
	@Autowired
	BsCalculService bsCalculService;
	
	@GetMapping("/bsCalculate") // 업체 정산 내역 페이지
	public void bsCalculate() {
	}
	
	@GetMapping("/afterCalculate") // 업체 정산 내역 페이지
	public String afterCalculate(Model model, HttpSession session 
			,@RequestParam(value = "currentPage", required = false, defaultValue = "1") int currentPage
			,@RequestParam(value = "period", required = false, defaultValue = "") String period
			) {
		
		// 1. 맵선언해서 페이징처리 파라미터와 원래파라미터 넣기
		Map<String,Object> calculMap = new HashMap<String, Object>();
		
		
			//1-1. BusiId
		BusiVO busiVO = (BusiVO) session.getAttribute("vo");
		String busiId = busiVO.getBusiId();
		calculMap.put("busiId",busiId);
		
		
			//1-2. parameters
		calculMap.put("currentPage",currentPage);
		if(!period.equals("")) {
			String[] dateTodate = new String[3];
			dateTodate = period.split("\\s");
			if(dateTodate.length < 3) {
				log.debug("Split Length : " + dateTodate.length);
				return "redirect:/business/calcul/afterCalculate";
			}
			calculMap.put("startDt", dateTodate[0]);
			calculMap.put("endDt", dateTodate[2]);
		}
		
			//1-3. totalCalcul가져오기
		String totalCalculStr = bsCalculService.totalCalcul(calculMap).trim();
		int totalCalculInt = Integer.parseInt(totalCalculStr);
		
		// 2. 기간동안 select해오기
		List<CalculVO> calculList= bsCalculService.selectCalcul(calculMap);
		model.addAttribute("calculList", new PagingDTO<CalculVO>(totalCalculInt, currentPage, 5, calculList));
		// 3. 기간동안 sum가져오기
		String sumCalcul= bsCalculService.sumCalcul(calculMap);
		model.addAttribute("sumCalcul",sumCalcul);
		
		return "business/calcul/bsCalculate";
	}
	
	
	

}
