package kr.or.ddit.member.controller;

import java.security.Principal;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AnonymousAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.FieldError;
import org.springframework.validation.ObjectError;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.member.service.MmAcmService;
import kr.or.ddit.member.service.MmRntcarService;
import kr.or.ddit.util.PagingDTO;
import kr.or.ddit.vo.BusiVO;
import kr.or.ddit.vo.CarVO;
import kr.or.ddit.vo.CvfcVO;
import kr.or.ddit.vo.MemVO;
import kr.or.ddit.vo.RmDeVO;
import kr.or.ddit.vo.RmVO;
import kr.or.ddit.vo.RvwVO;

@RequestMapping("/member/rntcar")
@Controller
public class RntcarController{
	private static final Logger log = LoggerFactory.getLogger(RntcarController.class);
	


	@Autowired
	MmRntcarService mmRntcarService;
	
	@Autowired
	MmAcmService mmAcmService;

	/** 숙소 검색 메인페이지로
	 * @param model
	 * @return
	 */
	@GetMapping("/main")
	public String rntcarMain(Model model) {

		return "member/rntcar/rntcarMain";
	}
	

	
	/**검색 조건 처리-세션에 담아줌
	 * @param model
	 * @param busiLoc
	 * @param guestRoomNum
	 * @param checkInOut
	 * @param session
	 * @return
	 */
	@PostMapping("/search")
	public String searchRntcar(Model model,
			@RequestParam(value="busiLoc",required=false) String busiLoc,
		    @RequestParam(value="rsvSt",required=false) String rsvSt,
		    @RequestParam(value="rsvEd",required=false) String rsvEd,
		    HttpSession session){
		
			DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm");
	        LocalDateTime rsvStTime = LocalDateTime.parse(rsvSt, formatter);
	        LocalDateTime rsvEdTime = LocalDateTime.parse(rsvEd, formatter);
			
			long totalHours = ChronoUnit.HOURS.between(rsvStTime, rsvEdTime); // 시간 단위로 차이 계산
			
				
			//검색조건 유지위해 세션처리
			session.setAttribute("busiLoc",busiLoc);
			session.setAttribute("carRsvSt",rsvSt);
			session.setAttribute("carRsvEd",rsvEd);
			session.setAttribute("totalHours",totalHours);
			
		return "redirect:/member/rntcar/search/result";
	}
	
	
	
	/**검색 결과 리스트 
	 * @param model
	 * @param session
	 * @return 
	 */
	@GetMapping("/search/result")
	public String searchResultRntcar(Model model, HttpSession session){
		
		//세션에서 값 가져온다 
		String busiLoc= (String) session.getAttribute("busiLoc");
		String rsvSt= (String) session.getAttribute("carRsvSt");
		String rsvEd= (String) session.getAttribute("carRsvEd");
		long totalHours= (long) session.getAttribute("totalHours");
		
		
		//렌트카 검색 위해 쿼리로 들어갈 검색 조건 저장 map
		HashMap<String,String> map = new HashMap<String, String>();
		
		map.put("busiLoc",busiLoc);
		map.put("rsvSt",rsvSt);
		map.put("rsvEd",rsvEd);
		
		log.info("맵이야:"+map);
		
	
		
		//조건에 맞는 업체, 자동차 리스트, 자동차 최대값 얻기
		List<CarVO> carVOList = this.mmRntcarService.searchRntcar(map);
		int maxCarPr=this.mmRntcarService.getMaxCarPr(map);
		
		
		Map<String, List<CarVO>> carMap = new HashMap<>();
		for (CarVO car : carVOList) {
			if (!carMap.containsKey(car.getCarKnd())) {
				carMap.put(car.getCarKnd(), new ArrayList<>());
			}
			carMap.get(car.getCarKnd()).add(car);
			log.info("차종",car.getCarKnd());
		}

		log.info("카맵",carMap);
		model.addAttribute("carMap", carMap);
		model.addAttribute("carVOList", carVOList);
		model.addAttribute("carRsvSt", rsvSt);
		model.addAttribute("carRsvEd", rsvEd);
		model.addAttribute("maxCarPr", maxCarPr);
		model.addAttribute("totalHours", totalHours);
		
		
		return "member/rntcar/rntcarList";
	}
	
	
	
	
	/**
	 * @param carNum
	 * @param rsvSt
	 * @param rsvEd
	 * @param model
	 * @param session
	 * @return
	 */
	@GetMapping("/detail/{carNum}")
	public String acmDetail(@PathVariable(value="carNum",required=true) String carNum,
			Model model,
			HttpSession session) {
		
		
		String carRsvSt= (String) session.getAttribute("carRsvSt");
		String carRsvEd= (String) session.getAttribute("carRsvEd");
		long totalHours= (long) session.getAttribute("totalHours");

		
		//차량정보
		CarVO carVO = this.mmRntcarService.detailRntcar(carNum);
		
		//model에 값 넣기
		model.addAttribute("carVO",carVO);
		model.addAttribute("carRsvSt",carRsvSt);
		model.addAttribute("carRsvEd",carRsvEd);
		model.addAttribute("totalHours",totalHours);

		
		return "member/rntcar/rntcarDetail";
	}

	
	
	/**
	 * @param model
	 * @param busiId
	 * @param session
	 * @param principal
	 * @return
	 */
	@PostMapping("/rsvCar")
	public String rsvCar(Model model,
			@RequestParam("carNum") String carNum,
			@RequestParam("totalFee") String totalFee,
			HttpSession session,
			Principal principal
			) {
		
		//로그인 했을시 회원정보 넘겨주기 
		if(principal!=null) {
			String memId = principal.getName();
			MemVO memVO = mmAcmService.getMemInfo(memId);
			model.addAttribute("memVO",memVO);
			
		}
		
		
		//픽업반납날짜 가져오기
		String carRsvSt= (String) session.getAttribute("carRsvSt");
		String carRsvEd= (String) session.getAttribute("carRsvEd");
	
		CarVO carVO = this.mmRntcarService.detailRntcar(carNum);

		
		
		model.addAttribute("carVO",carVO);
		model.addAttribute("carRsvSt",carRsvSt);
		model.addAttribute("carRsvEd",carRsvEd);
		model.addAttribute("totalFee",totalFee);
		
		
		return "member/rntcar/rntcarRsv";
	}
	
}
