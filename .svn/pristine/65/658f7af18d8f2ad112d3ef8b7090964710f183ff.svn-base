package kr.or.ddit.business.controller;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;


import kr.or.ddit.business.service.BsBusiService;
import kr.or.ddit.business.service.impl.BsEmailServiceImpl;
import kr.or.ddit.vo.BusiVO;
import lombok.extern.slf4j.Slf4j;
import net.coobird.thumbnailator.Thumbnailator;

@Slf4j
@RequestMapping("/business/myPage")
@Controller
public class BsMyPageController {
	
	@Autowired
	BsBusiService bsBusiService;
	
	
	@GetMapping("/detail") //회원수정 페이지
	public String detail(Model model, HttpSession session) {
		BusiVO busiVO =  (BusiVO) session.getAttribute("vo");
		log.info("busiVO : " + busiVO);
		String imgPath = this.bsBusiService.getImgPath(busiVO.getBusiId());
		busiVO.setBusiImg(imgPath);
		log.info("이미지 경로 :"+imgPath);
		
		model.addAttribute("data", busiVO);
		log.info("busiVO:" +busiVO);
		return "business/myPage/detail";
	}
	
	// 비밀번호 변경 
	@PostMapping("/updatePw")
	@ResponseBody
	public int updatePw( Model model ,@RequestBody BusiVO busiVO, HttpSession session) {
		// 세션에 로그인된 세션 BO
		BusiVO sBusiVO =  (BusiVO) session.getAttribute("vo");
		model.addAttribute("data", sBusiVO);
		
		log.info("왓다!:" );
		log.info("현재 SbusiVO:" +sBusiVO); 
		log.info("변경 busiVO:" +busiVO); 
		
		String setPw =busiVO.getBusiPw();

		sBusiVO.setBusiPw(setPw);
		
		log.info("busiVO:" +sBusiVO); 
		
		int result =this.bsBusiService.resetPw(sBusiVO);
		
		return result;
	}
	
	// 전화번호 변경 
	@PostMapping("/updateTel")
	@ResponseBody
	public int updateTel( Model model ,@RequestBody BusiVO busiVO, HttpSession session) {
		BusiVO sBusiVO =  (BusiVO) session.getAttribute("vo");
		model.addAttribute("data", sBusiVO);
		
		String setTel =busiVO.getBusiTel();		
		sBusiVO.setBusiTel(setTel);
		
		log.info("busiVO:" +sBusiVO); 
		
		int result =this.bsBusiService.resetTel(sBusiVO);
		
		return result;
	}
	
	@PostMapping("/updateBank")
	@ResponseBody
	public int updateBank( Model model ,@RequestBody BusiVO busiVO, HttpSession session) {
		BusiVO sBusiVO =  (BusiVO) session.getAttribute("vo");
		model.addAttribute("data", sBusiVO);
		
		String setBank  =busiVO.getAccount();
		sBusiVO.setAccount(setBank);
		
		log.info("busiVO:" +sBusiVO); 
		
		int result =this.bsBusiService.updateBank(sBusiVO);
		
		return result;
	}
	// 원더머니 출금시  차액
	@PostMapping("/withDraw")
	@ResponseBody
	public int withDraw( Model model ,@RequestBody BusiVO busiVO, HttpSession session) {
		BusiVO sBusiVO =  (BusiVO) session.getAttribute("vo");
		model.addAttribute("data", sBusiVO);
		
		int setMoney  = busiVO.getBusiMny();
		
		int balance = sBusiVO.getBusiMny();
		
		if(balance < setMoney) {
			log.info("잔고부족");
			return 0;
		} else {
			balance -= setMoney;
		}
		
		sBusiVO.setBusiMny(balance);
		
		log.info("sBusiVO:" +sBusiVO); 
		
		int result =this.bsBusiService.withDraw(sBusiVO);
		
		return result;
	}
	@PostMapping("/updateGubun")
	@ResponseBody
	public int updateGubun( Model model ,@RequestBody BusiVO busiVO, HttpSession session) {
		log.info(" 구분에 왓다 "); 
		
		BusiVO sBusiVO =  (BusiVO) session.getAttribute("vo");
		model.addAttribute("data", sBusiVO);
		
		String setAcmdCode  =busiVO.getAcmdCode();
		sBusiVO.setAcmdCode(setAcmdCode);
		
		log.info("busiVO:" +sBusiVO); 
		
		int result =this.bsBusiService.updateGubun(sBusiVO);
		
		return result;
	}
	
	@PostMapping("/filePost")
	@ResponseBody
	public int  filePost(@RequestBody BusiVO busiVO) {
		log.info("filePost왓다:" );
		log.info("busiVO:" +busiVO);
		  
		String uploadFolder 
		= "C:\\eGov3.10.0\\workspace\\wonderway\\src\\main\\webapp\\resources\\upload";		
		
		log.info("uploadFolder : " + uploadFolder);
		
		return 0;
	}
	
	@PostMapping("/chatTimePost")
	@ResponseBody
	public int chatTimePost(Model model ,@RequestBody BusiVO busiVO, HttpSession session ) {
		log.info(" chatTime에 왓다 "); 
		
		BusiVO sBusiVO =  (BusiVO) session.getAttribute("vo");
		model.addAttribute("data", sBusiVO);
		
		String setChatSt  =busiVO.getChatSt();
		String setChatEd  =busiVO.getChatEd();

		sBusiVO.setChatEd(setChatEd);
		sBusiVO.setChatSt(setChatSt);
	
		
		log.info("sBusiVO:" +sBusiVO); 
		
		int result =this.bsBusiService.chatTime(sBusiVO);
		
		log.info("update : " + result);
		
		return result;
	}

	// 이미지 등록 
	@PostMapping("/updateImg")
	@ResponseBody
	public int updateImg( Model model ,BusiVO busiVO, HttpSession session) {
		BusiVO sBusiVO =  (BusiVO) session.getAttribute("vo");
		model.addAttribute("data", sBusiVO);
		
//		String setImg =busiVO.getBusiImg();		
//		sBusiVO.setBusiImg(setImg);
		sBusiVO.setUploads(busiVO.getUploads());
		
		session.setAttribute("vo1", sBusiVO);
		log.info("busiVO:" +sBusiVO); 
		
		int result =this.bsBusiService.updateImg(sBusiVO);
		
		return result;
	}
	
	
	
	
	
	
}
