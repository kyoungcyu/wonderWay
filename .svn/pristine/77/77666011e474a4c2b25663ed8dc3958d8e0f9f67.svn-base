package kr.or.ddit.member.controller;

import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.util.Date;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.admin.service.AdMemService;
import kr.or.ddit.member.service.MemRcmService;
import kr.or.ddit.vo.MemVO;
import kr.or.ddit.vo.RcmStyVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/member")
@Controller
public class RcmController {
	
	@Autowired
	AdMemService adMemService;
	
	@Autowired
	MemRcmService memRcmService;
	
	//회원 맞춤 숙소 추천
	@GetMapping("/rcm/sty")
	public String rcmSty(Model model,
			@RequestParam(value = "loc", required = false, defaultValue = "") String loc,
			@RequestParam(value = "busiCode", required = false, defaultValue = "") String busiCode,
			HttpSession session, Authentication authentication, MemVO memVO, RcmStyVO rcmStyVO) {
		
		
	    UserDetails userDetails = (UserDetails) authentication.getPrincipal();
	    String memId = userDetails.getUsername();
	    log.info("memId : " + memId);
	    memVO.setMemId(memId);
	    
	    memVO = this.adMemService.memDetail(memVO);
	    String memGen = memVO.getMemGen();
	    Date memBir = memVO.getMemBir();
	    
	    LocalDate currentDate = LocalDate.now();
	    LocalDate birthDate = memBir.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
	    Period period = Period.between(birthDate, currentDate);
	    int bir = period.getYears();

	    // 연령대 계산
	    int age;
	    if (bir < 30) {
	    	age = 20;
	    } else if (bir < 40) {
	    	age = 30;
	    } else if (bir < 50) {
	    	age = 40;
	    } else if (bir < 60) {
	    	age = 50;
	    } else {
	    	age = 60;
	    }
	    
	    rcmStyVO.setAge(age);
	    rcmStyVO.setGen(memGen);
	    rcmStyVO.setLoc(loc);
	    rcmStyVO.setBusiCode(busiCode);
	    
		RcmStyVO rcmStyList = this.memRcmService.rcmStyList(rcmStyVO);
		
		
		return "member/rcm/sty";
	}
}
